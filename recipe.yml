name: FW16 Vanilla Desktop # Replace this name with your image name
id: fw16 # Replace this ID with your image ID
stages:
- id: build
  base: ghcr.io/vanilla-os/desktop:main # Optionally, Replace this image URL with a different one i.e. nvidia:main, etc
  singlelayer: false
  labels:
    maintainer: self-maintained # Optionally, Replace this with your name
  args:
    DEBIAN_FRONTEND: noninteractive # Set the image environment as non-interactive
  
  # Commands to run first before building the modules
  runs:
    commands:
      - echo 'APT::Install-Recommends "1";' > /etc/apt/apt.conf.d/01norecommends

  modules:


  # Put your custom actions below this comment
  - name: amd-rocm-init
    type: shell
    commands:
    - mkdir --parents --mode=0755 /etc/apt/keyrings
    - wget https://repo.radeon.com/rocm/rocm.gpg.key -O - | gpg --dearmor | tee /etc/apt/keyrings/rocm.gpg > /dev/null
    - echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/rocm.gpg] https://repo.radeon.com/rocm/apt/6.4.3 jammy main" | tee /etc/apt/sources.list.d/rocm.list
    - echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/rocm.gpg] https://repo.radeon.com/amdgpu/6.4.3/ubuntu jammy main" | sudo tee /etc/apt/sources.list.d/amdgpu.list
    - 'printf "Package: *\nPin: release o=repo.radeon.com\nPin-Priority: 600" | tee /etc/apt/preferences.d/rocm-pin-600'
    - udevadm control --reload-rules
    - udevadm trigger
    
  - name: amd-drivers
    type: apt
    source:
       packages:
       - amdgpu-dkms
       
  - name: init-setup
    type: shell
    commands:
    - lpkg --unlock
    - apt-get update

  - name: rocm-packages
    type: apt
    source:
       packages:
       - python3-setuptools 
       - python3-wheel
       
  - name: rocm-pre
    type: shell
    commands:
    - echo -e "KERNEL==\"kfd\", MODE=\"0666\"\nSUBSYSTEM==\"drm\", KERNEL==\"renderD*\", MODE=\"0666\"" > /etc/udev/rules.d/70-amdgpu.rules

  - name: install-rocm-core
    type: apt
    source:
      packages:
      - rocm-core
      - rocm-hip-runtime
      - rocm-llvm

  - name: install-rocm-monitoring
    type: apt
    source:
      packages:
      - rocm-smi-lib

  - name: install-rocm-libs
    type: apt
    source:
      packages:
      - rocblas
      - hipblas
      - miopen-hip
      - rccl

  - name: rocm-post
    type: shell
    commands:
    - printf '/opt/rocm/lib\n/opt/rocm/lib64\n' >> /etc/ld.so.conf.d/rocm.conf
    - ldconfig

      
  - name: example-packages # Sample module using the built-in Apt module to install packages
    type: apt
    source:
      packages:
      - nano

  - name: example-commands # Sample module demonstrating the Shell module with custom commands
    type: shell
    commands:
    - echo Example output

  - name: example-modules # Sample module demonstrating importing local and remote modules
    type: includes
    includes:
      - modules/20-install-uv.yml
      - modules/50-install-debs.yml # Sample local module present in this repository
      # - gh:vanilla-os/dev-image:main:modules/00-basics.yml # Sample GitHub remote module in the format: `gh:your-name/your-repo:branch:modules/file.yml`
      # - https://raw.githubusercontent.com/Vanilla-OS/dev-image/main/modules/05-go.yml # Sample full URL remote module

  # Put your custom actions above this comment

  - name: set-image-name-abroot
    type: includes
    includes:
      - modules/80-set-image-abroot-config.yml

  - name: cleanup
    type: shell
    commands:
    - apt-get autoremove -y
    - apt-get clean
    - lpkg --lock

  - name: fsguard
    type: fsguard
    CustomFsGuard: false
    FsGuardLocation: "/usr/sbin/FsGuard"
    GenerateKey: true
    FilelistPaths: ["/usr/bin"]
    modules:
      - name: remove-prev-fsguard
        type: shell
        commands:
          - rm -rf /FsGuard 
          - rm -f ./minisign.pub ./minisign.key 
          - chmod +x /usr/sbin/init

  - name: cleanup2
    type: shell
    commands:
      - rm -rf /tmp/*
      - rm -rf /var/tmp/*
      - rm -rf /sources
